addition
	aux spots: (a[ix], b[ix], aux)
	out spots: (a[ix], b[ix], aux)
	aux mapping:
		((0, 0, 0), 0)
		((0, 0, 1), 0)
		((0, 1, 0), 0)
		((0, 1, 1), 1)
		((1, 0, 0), 0)
		((1, 0, 1), 1)
		((1, 1, 0), 1)
		((1, 1, 1), 1)
	out mapping:
		((1, 0, 0), 1)
		((0, 0, 0), 0)
		((1, 1, 0), 0)
		((0, 0, 1), 1)
		((0, 1, 0), 1)
		((1, 1, 1), 1)
		((0, 1, 1), 0)
		((1, 0, 1), 0)
addition_with_a_twist
	aux spots: (a[ix], b[ix], aux, c)
	out spots: (a[ix], b[ix], aux, a[0])
	aux mapping:
		((0, 0, 0, 0), 0)
		((0, 0, 1, 0), 0)
		((0, 1, 0, 0), 0)
		((0, 1, 1, 0), 1)
		((1, 0, 0, 0), 0)
		((1, 0, 1, 0), 1)
		((1, 1, 0, 0), 1)
		((1, 1, 1, 0), 1)
	out mapping:
		((1, 0, 0, 0), 1)
		((0, 1, 0, 0), 1)
		((0, 0, 0, 0), 0)
		((1, 1, 0, 0), 0)
		((0, 0, 1, 0), 0)
		((0, 1, 0, 1), 1)
		((1, 0, 0, 1), 1)
		((1, 0, 1, 0), 1)
		((0, 1, 1, 0), 1)
		((1, 1, 0, 1), 0)
		((1, 0, 1, 1), 0)
		((0, 0, 1, 1), 1)
		((0, 0, 0, 1), 0)
		((1, 1, 1, 0), 0)
		((0, 1, 1, 1), 0)
		((1, 1, 1, 1), 1)
parity_single_bit
	aux spots: (a[ix], b[ix], aux)
	out spots: (a[ix], aux, end)
	aux mapping:
		((0, 0, 0), 0)
		((0, 0, 1), 1)
		((0, 1, 0), 0)
		((0, 1, 1), 1)
		((1, 0, 0), 1)
		((1, 0, 1), 0)
		((1, 1, 0), 1)
		((1, 1, 1), 0)
	out mapping:
		((1, 0, 0), 0)
		((1, 1, 0), 0)
		((1, 0, 1), False)
		((0, 0, 0), 0)
		((0, 0, 1), True)
		((0, 1, 0), 0)
		((0, 1, 1), False)
		((1, 1, 1), True)
running_parity
	aux spots: (a[ix], aux)
	out spots: (a[ix], aux)
	aux mapping:
		((0, 0), 0)
		((0, 1), 1)
		((1, 0), 1)
		((1, 1), 0)
	out mapping:
		((0, 0), 0)
		((1, 0), 1)
		((0, 1), 1)
		((1, 1), 0)
successes: ['addition', 'addition_with_a_twist', 'parity_single_bit', 'running_parity']
failures: []
